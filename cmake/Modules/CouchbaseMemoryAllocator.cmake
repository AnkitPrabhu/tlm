OPTION(COUCHBASE_MEMORY_ALLOCATOR "The memory allocator to use")

INCLUDE(FindCouchbaseTcMalloc)
INCLUDE(FindCouchbaseJemalloc)

IF (COUCHBASE_MEMORY_ALLOCATOR)
   IF ("${COUCHBASE_MEMORY_ALLOCATOR}" STREQUAL "tcmalloc")
      IF (TCMALLOC_FOUND)
         SET(MEMORY_ALLOCATOR tcmalloc)
      ELSE (TCMALLOC_FOUND)
         MESSAGE(FATAL_ERROR "Could not find TcMalloc")
      ENDIF (TCMALLOC_FOUND)
   ELSEIF ("${COUCHBASE_MEMORY_ALLOCATOR}" STREQUAL "jemalloc")
      IF (JEMALLOC_FOUND)
         SET(MEMORY_ALLOCATOR jemalloc)
      ELSE (JEMALLOC_FOUND)
         MESSAGE(FATAL_ERROR "Could not find JEMalloc")
      ENDIF (JEMALLOC_FOUND)
   ELSEIF ("${COUCHBASE_MEMORY_ALLOCATOR}" STREQUAL "system")
      SET(MEMORY_ALLOCATOR system)
   ELSE ("${COUCHBASE_MEMORY_ALLOCATOR}" STREQUAL "system")
      MESSAGE(FATAL_ERROR "Unknow memory allocator specified")
   ENDIF ("${COUCHBASE_MEMORY_ALLOCATOR}" STREQUAL "tcmalloc")
ELSE (COUCHBASE_MEMORY_ALLOCATOR)
   # If the user didn't specify an allocator, we default to the first
   # of {tcmalloc,jemalloc} which can be found. If neither is found
   # then we error, as *all* production builds use one of the two.
   IF (TCMALLOC_FOUND)
      SET(MEMORY_ALLOCATOR tcmalloc)
   ELSEIF (JEMALLOC_FOUND)
      SET(MEMORY_ALLOCATOR jemalloc)
   ELSE (TCMALLOC_FOUND)
      MESSAGE(FATAL_ERROR "Unable to find either TCMalloc or jemalloc for memory allocator - cowardly refusing to continue.
If you really want to build without a specialised allocator, explicitly set COUCHBASE_MEMORY_ALLOCATOR=system
")
   ENDIF (TCMALLOC_FOUND)
ENDIF (COUCHBASE_MEMORY_ALLOCATOR)

IF (MEMORY_ALLOCATOR STREQUAL "tcmalloc")
    SET(MEMORY_ALLOCATOR true)
    ADD_DEFINITIONS(-DHAVE_TCMALLOC)
    SET(MALLOC_LIBRARIES ${TCMALLOC_LIBRARIES})
    SET(MALLOC_INCLUDE_DIR ${TCMALLOC_INCLUDE_DIR})
    MESSAGE(STATUS "Using TcMalloc")
ELSEIF (MEMORY_ALLOCATOR STREQUAL "jemalloc")
    SET(MEMORY_ALLOCATOR true)
    ADD_DEFINITIONS(-DHAVE_JEMALLOC)
    SET(MALLOC_LIBRARIES ${JEMALLOC_LIBRARIES})
    SET(MALLOC_INCLUDE_DIR ${JEMALLOC_INCLUDE_DIR})
    MESSAGE(STATUS "Using JEMalloc")
ELSEIF (MEMORY_ALLOCATOR STREQUAL "system")
    SET(MEMORY_ALLOCATOR false)
    MESSAGE(STATUS "Using system-supplied malloc")
ENDIF (MEMORY_ALLOCATOR STREQUAL "tcmalloc")
